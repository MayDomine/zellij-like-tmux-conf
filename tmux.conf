unbind -T root -a
###########
# options #
###########

# global options
set -g prefix C-b
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm-256color:Tc'
set -g escape-time 40
set -g allow-rename off
setw -g xterm-keys off
## Window options
set -g base-index 1
## Pane options
setw -g pane-base-index 1
setw -g visual-bell off
setw -g visual-activity on
set -g pane-border-indicators arrows

bind -n M-1 select-window -t 1 
bind -n M-2 select-window -t 2 
bind -n M-3 select-window -t 3 
bind -n M-4 select-window -t 4 
bind -n M-5 select-window -t 5 
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8

# Reset input state
run-shell "$TMUX_HOME/tmux/scripts/input_reset.sh"
set-hook -gu client-attached "select-pane -d"
set-hook -gu client-focus-in "select-pane -d"
set-hook -gu window-pane-changed "select-pane -d"
set-hook -gu session-window-changed "select-pane -d"

# True color settings
set -g default-terminal "$TERM"
set -ag terminal-overrides ",$TERM:Tc"

############
# Keybinds #
############

# Unbinding defaults
unbind c
bind x kill-pane
unbind ,

# Prefix binds
## General binds
bind C-b send-prefix
bind g send-keys M-g
bind : command-prompt
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi C-v send-keys -X begin-selection \; send-keys -X rectangle-toggle;
bind-key -T copy-mode-vi v send-keys -X begin-selection;
bind-key -T copy-mode-vi V send-keys -X select-line;
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

## Pane
bind -n M-p source "$TMUX_HOME/tmux/pane.conf"
## Move
bind -n M-/ source "$TMUX_HOME/tmux/move.conf"

## Resize
bind -n M-n source "$TMUX_HOME/tmux/resize.conf"

## Window
bind -n M-t source "$TMUX_HOME/tmux/window.conf"

## Session
bind -n M-s source "$TMUX_HOME/tmux/session.conf"

bind -n M-o copy-mode
## NOTE: root binds (very important!)

bind -n M-r command-prompt -I "#W" "rename-window '%%'"
bind -n M-x run-shell 'tmux kill-window; tmux next-window;'
bind -n M-n new-window

### Quick pane/window creation
# bind -T root M-d split-window -h
bind h split-window -h
bind v split-window -v
bind -n M-w new-window
bind -n M-f run-shell "$TMUX_HOME/tmux/scripts/popup.sh"

### switch windows efficiently
bind -n M-[ previous-window
bind -n M-] next-window
bind -n M-< swap-window -t :-1\; select-window -t :-1
bind -n M-> swap-window -t :+1\; select-window -t :+1
bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
)\""
### "Locked" mode
# Cannot use any binds while in this mode
bind -T root M-g source "$TMUX_HOME/tmux/locked.conf"
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l'  'select-pane -R'

bind-key -n M-H if -F "#{@pane-is-vim}" 'send-keys M-H' 'resize-pane -L 3'
bind-key -n M-J if -F "#{@pane-is-vim}" 'send-keys M-J' 'resize-pane -D 3'
bind-key -n M-K if -F "#{@pane-is-vim}" 'send-keys M-K' 'resize-pane -U 3'
bind-key -n M-L if -F "#{@pane-is-vim}" 'send-keys M-L' 'resize-pane -R 3'

############
# Themeing #
############

set -g status-right '#[fg=#282828,bg=#50fa7b]NORMAL#[fg=#fabd2f,bg=default] %Y-%m-%d %H:%M '
set -g status-position top
set -g status-justify left
set -g status-style 'fg=#fabd2f'
set -g status-left ''

set -g pane-active-border-style "bg=default,fg=colour168"
set -g @floax-border-color 'colour168'
set -g pane-border-style "bg=default,fg=colour245"
set -g pane-border-lines "heavy"
# set -g status-right '#{pane_input_off} %Y-%m-%d %H:%M '
set -g status-right-length 50
set -g status-left-length 10

set -g status-style "bg=black"
set -g @sessionx-bind "n"
set -g @sessionx-prefix on

set -g @sessionx-filter-current 'true'
set -g @sessionx-window-mode 'on'
set -g @sessionx-tree-mode 'off'







set -g @minimal-tmux-fg "#000000"
set -g @minimal-tmux-bg "#92BED6"
set -g @minimal-tmux-justify "centre"
set -g @minimal-tmux-indicator-str "  tmux  "
set -g @minimal-tmux-indicator true
set -g @minimal-tmux-status "bottom"

# Enables or disables the left and right status bar
set -g @minimal-tmux-right true
set -g @minimal-tmux-left true

# expanded icon (fullscreen icon)
set -g @minimal-tmux-expanded-icon "Û∞äì "

# on all tabs (default is false)
# false will make it visible for the current tab only
set -g @minimal-tmux-show-expanded-icons-for-all-tabs true

# To add or remove extra text in status bar
set -g @minimal-tmux-status-right-extra ""
set -g @minimal-tmux-status-left-extra ""

# To make the selection box rounded () or edged <>
# Default is nothing, when set to true default is edged
set -g @minimal-tmux-use-arrow true
set -g @minimal-tmux-right-arrow "ÓÇ¥"
set -g @minimal-tmux-left-arrow "ÓÇ∂"

# Not recommended to change these values
set -g @minimal-tmux-status-right "#S"
set -g @minimal-tmux-status-left " "
set -g @minimal-tmux-window-status-format " #I:#W "
# window_status_format=$(get_tmux_option "@minimal-tmux-window-status-format" ' ÓÇ±#I:#W ')
# If getting strings cut in left status or right
# Here 20 is the length of the characters in the string
set -g status-right-length 20
set -g status-left-length 20

# Status left and right
# set -g status-left ''
# set -g status-right ''
# setw -g window-status-current-style 'fg=#504945 bg=#fabd2f bold'
# setw -g window-status-current-format '#[fg=black,bg=green]ÓÇ∞#[fg=black,bg=green] #I ÓÇ± #W #[fg=green,bg=black]ÓÇ∞'
# setw -g window-status-current-format '<#I | #W >'

# setw -g window-status-style 'fg=#bdae93 dim'

# Border styles
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'ddzero2c/tmux-easymotion'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'niksingh710/minimal-tmux-status'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

set -g @easymotion-key 's'
set -g allow-passthrough on
set status on 
bind -T root C-t run-shell "tmux set status"
bind-key a set-window-option synchronize-panes

set -g @plugin 'omerxx/tmux-floax'
set -g @floax-bind '-n M-i'
set -g @floax-bind-menu 'C-p'
set -g @floax-change-path 'false'
set -g @floax-text-color 'white'
set -g @floax-width '70%'
set -g @floax-height '70%'




# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_sername/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
set -g @plugin 'omerxx/tmux-sessionx'


